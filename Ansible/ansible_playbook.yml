---
- name: My Test Playbook
  hosts: localhost
  become: true

  vars:
   # ans_name_conf: "Python environment name without extension"
   # path_dir_venvs: "{{ ans_path }}/venvs/" #Path to the folder with configuration files
   # path_dest_environment: /opt/python_venvs
        
  tasks:
  - name: Basically "apt-get update"
    ansible.builtin.apt:
      update_cache: true
 
  - name: Install NGINX Packages
    ansible.builtin.apt:
      name: nginx
      state: latest
      update_cache: true
  - name: Start NGINX Service
    ansible.builtin.service:
      name: nginx
      state: restarted
      enabled: true
  
  - name: Install software-properties-common
    ansible.builtin.apt:
      name: software-properties-common
      state: present
      update_cache: true
  - name: Install ppa:ondrej/php
    ansible.builtin.apt_repository:
      repo: ppa:ondrej/php
      update_cache: true    
    register: results
  - debug:
      var: results
  - name: Install PHP 8.1 FPM
    ansible.builtin.apt:
      name: php8.1-fpm
      state: present
      update_cache: true    
      
  - name: checking
    ansible.builtin.command: 
      # chdir: "{{ path_dest_environment }}"
      cmd: php -v # ls -lh {{ ans_name_conf }}/bin/  ls -lh {{ ans_name_conf }}/bin 
    register: command_output
  - name: command output
    ansible.builtin.debug:
      var: command_output.stdout_lines
      
# --------------------------Installing Mysql  and dependencies

  - name: Installing Mysql  and dependencies
    package:
     name: "{{item}}"
     state: present
     update_cache: yes
    loop:
      - mysql-server
      - mysql-client 
      - python3-mysqldb
      - libmysqlclient-dev
     
  - name: start and enable mysql service
    service:
      name: mysql
      state: started
      enabled: yes
 # - name: creating mysql user (medium_post)
 #   mysql_user:
 #     name: "{{db_user}}"
 #     password: "{{db_pass}}"
 #     priv: '*.*:ALL'
 #     host: '%'
 #     state: present
  - name: creating medium_db
    mysql_db:
      name: "{{db_name}}"
      state: present
  - name: Enable remote login to mysql
    lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address'
      line: 'bind-address = 0.0.0.0'
      backup: yes
    notify:
       - Restart mysql
  
  handlers:
  - name: Restart mysql
    service:
      name: mysql
      state: restarted    
      
      
      
      
      
  #- name: Install Ansible
  #  ansible.builtin.apt:
  #    name: ansible
  #    state: present
  #    update_cache: true
 
  #- name: Creating a projects folder
  #  file:
  #    path: "{{ path_dest_environment }}"
  #    state: directory
  #    mode: 0755  
      
  #- name: Copying a configuration file to a remote machine
  #  copy:
  #    src: "{{ path_dir_venvs }}{{ ans_name_conf }}.txt" 
  #    dest: "{{ path_dest_environment }}"
  #    mode: 0555
           
  #- name: Setting the working environment and dependencies
  #  shell: | 
  #    cd {{ path_dest_environment }}
  #    echo "ans_name_cohf - {{ ans_name_conf }}"
  #    python3 -m venv {{ ans_name_conf }}
  #    . {{ ans_name_conf }}/bin/activate
  #    pip install -r {{ ans_name_conf }}.txt
  #  register: results
  #- debug:
  #    var: results

  #- name: run config
  #  ansible.builtin.command: 
  #    chdir: "{{ path_dest_environment }}"
  #    cmd: ls -lh {{ ans_name_conf }}/bin/ # ls -lh {{ ans_name_conf }}/bin 
  #  register: command_output
  #- name: command output
  #  ansible.builtin.debug:
  #    var: command_output.stdout_lines
